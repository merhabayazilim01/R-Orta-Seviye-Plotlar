x<- 1:10
y<- 10:19
library(ggplot2)
data <- data.frame(x,y)
View(data)
ggplot(data, aes(x=x , y=y)) +
geom_line()
ggplot(data, aes(x=x , y=y)) +
geom_line(size= 1.5)
ggplot(data, aes(x=x , y=y)) +
geom_line(size= 1.5, coor = "red")
ggplot(data, aes(x=x , y=y)) +
geom_line(size= 1.5, color = "red")
library(readxl)
line1 <- read_xlsx("data_source.xlsx", sheet = 1)
View(line1)
line1 <- read_xlsx("data_source.xlsx", sheet = "line")
line1 <- read_xlsx("data_source.xlsx", sheet = "line1")
View(line1)
colnames(line1)
ggplot(line1, aes(x= birinci_kolon , y=ikinci_kolon)) +
geom_line()
line2 <- read_xlsx("data_source.xlsx", sheet = 2)
View(line2)
library(dplyr)
library(tidyr)
colnames(line2)
line2 <- line2 %>%
pivot_longer(
cols = c("0.2", "0.4", "0.6" ,"0.8", "1" ,  "1.6", "1.8" ,"2" )
names_to = "kind",
line2 <- line2 %>%
pivot_longer(
cols = c("0.2", "0.4", "0.6" ,"0.8", "1" ,  "1.6", "1.8" ,"2" ),
names_to = "kind",
values_to= "values")
ggpolt(line2, aes(x= kind, y=values)) +
geom_line()
ggplot(line2, aes(x= kind, y=values)) +
geom_line()
ggplot(line2, aes(x= kind, y=values, group = Tür)) +
geom_line()
names(line2)[1] <- "tur"
View(line2)
ggplot(line2, aes(x= kind, y=values, group = tur)) +
geom_line()
ggplot(line2, aes(x= kind, y=values, group = tur)) +
geom_line(color= "red")
ggplot(line2, aes(x= kind, y=values, group = tur)) +
geom_line(size=1.5)
ggplot(line2, aes(x= kind, y=values, group = tur, color = tur)) +
geom_line(size=1.5) +
scale_color_manual(values = c("Elma"= "blue", "Armut" = "red", "Kiraz"= "orange", "Muz"= "purple"))
ggplot(line2, aes(x= kind, y=values, group = tur, color = tur)) +
geom_line(size=1.5) +
scale_color_manual(values = c("Elma"= "blue", "Armut" = "red", "Kiraz"= "orange", "Muz"= "purple"))+
labs(x= "Merhaba", y= "Yazilim")
ggplot(line2, aes(x= kind, y=values, group = tur, color = tur)) +
geom_line(size=1.5) +
scale_color_manual(values = c("Elma"= "blue", "Armut" = "red", "Kiraz"= "orange", "Muz"= "purple"))+
labs(x= "Merhaba", y= "Yazilim") +
ggtitle("Bizim İlk Plotımız")
ggplot(line2, aes(x= kind, y=values, group = tur, color = tur)) +
geom_line(size=1.5) +
scale_color_manual(values = c("Elma"= "blue", "Armut" = "red", "Kiraz"= "orange", "Muz"= "purple"))+
labs(x= "Merhaba", y= "Yazilim") +
ggtitle("Bizim İlk Plotımız") +
theme(
panel.grid = element_blank()
)
ggplot(line2, aes(x= kind, y=values, group = tur, color = tur)) +
geom_line(size=1.5) +
scale_color_manual(values = c("Elma"= "blue", "Armut" = "red", "Kiraz"= "orange", "Muz"= "purple"))+
labs(x= "Merhaba", y= "Yazilim") +
ggtitle("Bizim İlk Plotımız") +
theme(
panel.grid = element_blank(),
panel.grid.major = element_blank() ,
panel.grid.minor= element_blank()
)
ggplot(line2, aes(x= kind, y=values, group = tur, color = tur)) +
geom_line(size=1.5) +
scale_color_manual(values = c("Elma"= "blue", "Armut" = "red", "Kiraz"= "orange", "Muz"= "purple"))+
labs(x= "Merhaba", y= "Yazilim") +
ggtitle("Bizim İlk Plotımız") +
theme(
panel.grid = element_blank(),
panel.grid.major = element_blank() ,
panel.grid.minor= element_blank(),
axis.line = element_line()
)
ggplot(line2, aes(x= kind, y=values, group = tur, color = tur)) +
geom_line(size=1.5) +
scale_color_manual(values = c("Elma"= "blue", "Armut" = "red", "Kiraz"= "orange", "Muz"= "purple"))+
labs(x= "Merhaba", y= "Yazilim") +
ggtitle("Bizim İlk Plotımız") +
theme(
panel.grid = element_blank(),
panel.grid.major = element_blank() ,
panel.grid.minor= element_blank(),
axis.line = element_line(),
panel.background = element_blank()
)
ggplot(line2, aes(x= kind, y=values, group = tur, color = tur)) +
geom_line(size=1.5) +
scale_color_manual(values = c("Elma"= "blue", "Armut" = "red", "Kiraz"= "orange", "Muz"= "purple"))+
labs(x= "Merhaba", y= "Yazilim") +
ggtitle("Bizim İlk Plotımız") +
theme(
panel.grid = element_blank(),
panel.grid.major = element_blank() ,
panel.grid.minor= element_blank(),
axis.line = element_line(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5)
)
ggplot(line2, aes(x= kind, y=values, group = tur, color = tur)) +
geom_line(size=1.5) +
scale_color_manual(values = c("Elma"= "blue", "Armut" = "red", "Kiraz"= "orange", "Muz"= "purple"))+
labs(x= "Merhaba", y= "Yazilim") +
ggtitle("Bizim İlk Plotımız") +
theme(
panel.grid = element_blank(),
panel.grid.major = element_blank() ,
panel.grid.minor= element_blank(),
axis.line = element_line(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5),
legend.background = element_blank()
)
a <- 5
b <-4
data <- data.frame (a,b)
library(ggplot2)
library(readxl)
data <- read_xlsx("data_source.xlsx", sheet = 3)
View(data)
library(dplyr)
library(dplyr)
library(tidyr)
colnames(data)
names(data)[2] <- "Ayse"
colnames(data)
data_long <- data %>%
pivot_longer(
cols = c("Ali"   ,  "Ayse" ,   "Hasan"   ,"Tunahan" ,"Huri"   ),
names_to = "isim",
values_to = "sayilar"
)
View(data_long)
ggplot(data_long, aes(x=isim, y= sayilar)) +
geom_bar()
ggplot(data_long, aes(x=isim, y= sayilar)) +
geom_bar(aes(fill = isim))
ggplot(data_long, aes(x=isim, y= sayilar)) +
geom_bar(stat = "identity", position = "dodge", aes(fill = isim))
ggplot(data_long, aes(x=isim, y= sayilar)) +
geom_bar(stat = "identity", position = "besides", aes(fill = isim))
ggplot(data_long, aes(x=isim, y= sayilar)) +
geom_bar(stat = "identity", position = "beside", aes(fill = isim))
data_long$isim <- factor(data_long$isim, levels = c("Huri", "Hasan", "Ayse", "Tunahan", "Ali"))
ggplot(data_long, aes(x=isim, y= sayilar)) +
geom_bar(stat = "identity", position = "dodge", aes(fill = isim))
library(VennDiagram)
library(gridExtra)
library(readxl)
data_source <- read_xlsx("data_source.xlsx", sheet = 4)
asli <- data_source$Asli
kerem <-data_source$Kerem
ali <- data_source$Ali
venn <- venn.diagram(
x = list(asli,kerem,ali),
category.names = c("asli", "kerem","ali"),
filename = NULL,
output = TRUE,
fill = c("red", "blue","green")
)
grid.arrange(venn)
View(data_source)
library(ggplot2)
library(readxl)
line1 <- read_xlsx("data_source.xlsx", sheet = "line1")
View(line1)
colnames(line1)
ggplot(line1, aes(x= birinci_kolon , y=ikinci_kolon)) +
geom_line()
library(ggplot2)
library(readxl)
line1 <- read_xlsx("data_source.xlsx", sheet = "line1")
library(dplyr)
library(tidyr)
line2 <- read_xlsx("data_source.xlsx", sheet = 2)
line2 <- line2 %>%
pivot_longer(
cols = c("0.2", "0.4", "0.6" ,"0.8", "1" ,  "1.6", "1.8" ,"2" ),
names_to = "kind",
values_to= "values")
library(tidyr)
library(dplyr)
line2 <- read_xlsx("data_source.xlsx", sheet = 2)
colnames(line2)
line2 <- line2 %>%
pivot_longer(
cols = c("0.2", "0.4", "0.6" ,"0.8", "1" ,  "1.6", "1.8" ,"2" ),
names_to = "kind",
values_to= "values")
names(line2)[1] <- "tur"
ggplot(line2, aes(x= kind, y=values, group = tur, color = tur)) +
geom_line(size=1.5) +
scale_color_manual(values = c("Elma"= "blue", "Armut" = "red", "Kiraz"= "orange", "Muz"= "purple"))+
labs(x= "Merhaba", y= "Yazilim") +
ggtitle("Bizim ilk grafigimiz") +
theme(
panel.grid = element_blank(),
axis.line = element_line(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5)) #+
ggplot(line2, aes(x= kind, y=values, group = tur, color = tur)) +
geom_line(size=1.5) +
scale_color_manual(values = c("Elma"= "blue", "Armut" = "red", "Kiraz"= "orange", "Muz"= "purple"))+
labs(x= "Merhaba", y= "Yazilim") +
ggtitle("Bizim ilk grafigimiz") +
theme(
panel.grid = element_blank(),
axis.line = element_line(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5)) +
guides(color = FALSE) ## legend kapatmak için
ggplot(line2, aes(x= kind, y=values, group = tur, color = tur)) +
geom_line(size=1.5) +
scale_color_manual(values = c("Elma"= "blue", "Armut" = "red", "Kiraz"= "orange", "Muz"= "purple"))+
labs(x= "Merhaba", y= "Yazilim") +
ggtitle("Bizim ilk grafigimiz") +
theme(
panel.grid = element_blank(),
axis.line = element_line(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5)) #+
ggplot(line2, aes(x= kind, y=values, group = tur, color = tur)) +
geom_line(size=1.5) +
scale_color_manual(values = c("Elma"= "blue", "Armut" = "red", "Kiraz"= "orange", "Muz"= "purple"))+
labs(x= "Merhaba", y= "Yazilim") +
ggtitle("Bizim ilk grafigimiz") +
theme(
panel.grid = element_blank(),
legend.position = "none",
axis.line = element_line(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5)) #+
ggplot(line2, aes(x= kind, y=values, group = tur, color = tur)) +
geom_line(size=1.5) +
scale_color_manual(values = c("Elma"= "blue", "Armut" = "red", "Kiraz"= "orange", "Muz"= "purple"))+
labs(x= "Merhaba", y= "Yazilim") +
ggtitle("Bizim ilk grafigimiz") +
theme(
panel.grid = element_blank(),
#legend.position = "none", #isterseniz bu şekilde de legend kaldırabilirsiniz
axis.line = element_line(),
panel.background = element_blank(),
plot.title = element_text(hjust = 0.5)) #+
#guides(color = FALSE) ## legend kapatmak için diğer bir yöntem
library(readxl)
library(tidyverse)
library(dplyr)
data <- read_xlsx("data_source.xlsx", sheet = "BoxPlot")
View(data)
colnames(data)
data <- data %>%
pivot_longer(
cols = c("A_Spor", "B_Spor", "C_Spor", "D_Spor", "E_Spor"),
names_to = "kanal",
values_to = "reyting")
View(data)
ggplot(data, aes(x=kanal, y=reyting, group=kanal)) +
geom_boxplot(fill="#CCFFFF", notch=FALSE, outlier.shape = NA) +
geom_jitter(size=1, color="black", width=0.1) +
theme_ipsum() +
ylim(0,6)
library(hrbrthemes)
ggplot(data, aes(x=kanal, y=reyting, group=kanal)) +
geom_boxplot(fill="#CCFFFF", notch=FALSE, outlier.shape = NA) +
geom_jitter(size=1, color="black", width=0.1) +
theme_ipsum() +
ylim(0,6)
data <- data %>%
pivot_longer(
cols = c("A_Spor", "B_Spor", "C_Spor", "D_Spor", "E_Spor"),
names_to = "kanal",
values_to = "reyting",
values_drop_na = TRUE) %>%
mutate(reyting = as.numeric(reyting)) %>%
filter(reyting >= quantile(reyting, 0.01) & reyting <= quantile(reyting, 0.99))
data <- read_xlsx("data_source.xlsx", sheet = "BoxPlot")
colnames(data)
data <- data %>%
pivot_longer(
cols = c("A_Spor", "B_Spor", "C_Spor", "D_Spor", "E_Spor"),
names_to = "kanal",
values_to = "reyting",
values_drop_na = TRUE) %>%
mutate(reyting = as.numeric(reyting)) %>%
filter(reyting >= quantile(reyting, 0.01) & reyting <= quantile(reyting, 0.99))
ggplot(data, aes(x=kanal, y=reyting, group=kanal)) +
geom_boxplot(fill="#CCFFFF", notch=FALSE, outlier.shape = NA) +
geom_jitter(size=1, color="black", width=0.1) +
theme_ipsum() +
ylim(0,6)
data <- read_xlsx("data_source.xlsx", sheet = "BoxPlot")
colnames(data)
data <- read_xlsx("data_source.xlsx", sheet = "BoxPlot")
colnames(data)
data <- data %>%
pivot_longer(
cols = c("A_Spor", "B_Spor", "C_Spor", "D_Spor", "E_Spor"),
names_to = "kanal",
values_to = "reyting")
ggplot(data, aes(x=kanal, y=reyting, group=kanal)) +
geom_boxplot(fill="#CCFFFF", notch=FALSE, outlier.shape = NA) +
geom_jitter(size=1, color="black", width=0.1) +
theme_ipsum()
ggviolin(data, x = "kanal", y = "reyting", fill = "kanal",
palette = c("#FFCCCC", "#FFFFCC", "#CCFFE5","#CCFFFF", "red"),
add = "boxplot", add.params = list(fill = "white"))
library(viridis)
ggviolin(data, x = "kanal", y = "reyting", fill = "kanal",
palette = c("#FFCCCC", "#FFFFCC", "#CCFFE5","#CCFFFF", "red"),
add = "boxplot", add.params = list(fill = "white"))
library(forcats)
ggviolin(data, x = "kanal", y = "reyting", fill = "kanal",
palette = c("#FFCCCC", "#FFFFCC", "#CCFFE5","#CCFFFF", "red"),
add = "boxplot", add.params = list(fill = "white"))
ggboxplot(data, x = "trashing", y = "speed", fill = "trashing",
palette = c("#FFCCCC", "#FFFFCC", "#CCFFFF", "red","blue"),
add = "boxplot", add.params = list(fill = rep(c("#FFCCCC", "#FFFFCC", "#CCFFFF","red","blue"))))
library(colorspace)
ggviolin(data, x = "kanal", y = "reyting", fill = "kanal",
palette = c("#FFCCCC", "#FFFFCC", "#CCFFE5","#CCFFFF", "red"),
add = "boxplot", add.params = list(fill = "white"))
library(ggpubr)
ggviolin(data, x = "kanal", y = "reyting", fill = "kanal",
palette = c("#FFCCCC", "#FFFFCC", "#CCFFE5","#CCFFFF", "red"),
add = "boxplot", add.params = list(fill = "white"))
ggboxplot(data, x = "trashing", y = "speed", fill = "trashing",
palette = c("#FFCCCC", "#FFFFCC", "#CCFFFF", "red","blue"),
add = "boxplot", add.params = list(fill = rep(c("#FFCCCC", "#FFFFCC", "#CCFFFF","red","blue"))))
ggboxplot(data, x = "kanal", y = "reyting", fill = "kanal",
palette = c("#FFCCCC", "#FFFFCC", "#CCFFFF", "red","blue"),
add = "boxplot", add.params = list(fill = rep(c("#FFCCCC", "#FFFFCC", "#CCFFFF","red","blue"))))
library(readxl) #excel dosyasi okutmak icin
library(tidyverse) #pivot_longer icin
library(dplyr) # %>% isaretini aktiflestirmek icin
library(hrbrthemes) # theme_ipsum() fonksiyonu icin
library(ggpubr) #ggviolin ve ggboxplot fonksiyonlari icin
data <- read_xlsx("data_source.xlsx", sheet = "BoxPlot")
View(data)
colnames(data)
data <- data %>%
pivot_longer(
cols = c("A_Spor", "B_Spor", "C_Spor", "D_Spor", "E_Spor"),
names_to = "kanal",
values_to = "reyting")
ggplot(data, aes(x=kanal, y=reyting, group=kanal)) +
geom_boxplot(fill="lightblue", notch=FALSE, outlier.shape = NA) +
geom_jitter(size=1, color="black", width=0.1) +
theme_ipsum()
ggboxplot(data, x = "kanal", y = "reyting", fill = "kanal",
palette = c("red","blue", "orange", "lightblue"),
add = "boxplot", add.params = list(fill = rep(c("red","blue", "orange", "lightblue"))))
ggboxplot(data, x = "kanal", y = "reyting", fill = "kanal",
palette = c("red","blue", "orange", "lightblue","purple"),
add = "boxplot", add.params = list(fill = rep(c("red","blue", "orange", "lightblue","purple"))))
ggviolin(data, x = "kanal", y = "reyting", fill = "kanal",
palette = c("red","blue", "orange", "lightblue","purple"),
add = "boxplot", add.params = list(fill = "white"))
ggviolin(data, x = "kanal", y = "reyting", fill = "kanal",
palette = c("red","blue", "orange", "lightblue","purple"),
add = "boxplot", add.params = list(fill = "white"))+
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
ggviolin(data, x = "kanal", y = "reyting", fill = "kanal",
palette = c("red","blue", "orange", "lightblue","purple"),
add = "boxplot", add.params = list(fill = "white"))+
theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1))
retina.combined <- RenameIdents(retina.combined,
`0` = "Retinal rod cells",
`1` = "Retinal rod cells",
`2` = "Retinal rod cells",
`3` = "Mueller cells",
`4` = "OFF−bipolar cells",
`5` = "Retinal cone cells",
`6` = "ON−bipolar cells",
`7` = "Retinal ganglion cells",
`8` = "ON−bipolar cells",
`9` = "Microglial cells",
`10` = "Amacrine cells",
`11` = "Native cells")
